name: 'Generators'

on:
  workflow_call:
    inputs:
      affected:
        description: >
          Run for affected projects.
        required: false
        default: true
        type: boolean
      node_version:
        description: >
          Optionally define the version of Node to install via Volta.

          Pass `config` (default value) to use the Volta config.
        required: false
        default: 'config'
        type: string
      save_cache:
        description: >
          Should the cache be saved upon completion?
        required: false
        default: false
        type: boolean
    secrets:
      NX_CLOUD_ACCESS_TOKEN:
        description: 'The NX Cloud API token'
        required: true
      NX__TRIPPIN__API_KEY:
        description: 'The Trippin API Key'
        required: true

concurrency:
  group: generators--${{ github.workflow }}--${{ github.ref }}

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  NX__TRIPPIN__API_KEY: ${{ secrets.NX__TRIPPIN__API_KEY }}

jobs:
  generator:
    name: Generator - nx-${{ matrix.nx_version }}/${{ matrix.type }}/${{ matrix.example }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        type: [application]
        # type: [application, sdk, preset]
        example:
          - 'country-info'
          # - 'fake-api'
          # - 'javascript-wiki'
          # # - 'movies'
          # - 'rfam'
          # - 'stackexchange'
          # - 'star-wars-api'
          # - 'trippin'
        nx_version: [15.4]
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Job
        uses: ./.github/actions/setup-job
        id: setup
        with:
          node_version: ${{ inputs.node_version }}
          skip_node_cache: 'true'

      - name: Restore PNPM cache
        uses: actions/cache/restore@v3
        id: pnpm-cache
        with:
          path: |
            ${{ steps.setup.outputs.pnpm_directory }}
          key: |
            generators--pnpm--nx-${{ matrix.nx_version }}--type-${{ matrix.type }}--example-${{ matrix.example }}

      - name: Download Nx Mesh
        uses: actions/download-artifact@v3
        with:
          name: nx-mesh

      - name: Generate repo with example
        shell: bash
        run: |
          ls -1a
          cd ../
          ls -1a
          pnpm dlx create-nx-workspace@${{ matrix.nx_version }} \
            --name=generator \
            --appName=${{ matrix.nx_version }} \
            --preset=ts \
            --interactive=false \
            --nxCloud=false \
            --style=css \
            --skipGit
          cd generator
          ls -1a
          pnpm add /home/runner/work/nx-mesh/nx-mesh
          ls -1a
          pnpm exec nx generate nx-mesh:${{ matrix.type }} ${{ matrix.example }} \
            --example=${{ matrix.example }} \
            --no-interactive
          ls -1a

      - name: Build example
        shell: bash
        run: |
          ls -1a
          cd generator/${{ matrix.example }}
          ls -1a
          pnpm nx run ${{ matrix.example }}:build

      - name: Save PNPM cache
        uses: actions/cache/save@v3
        if: inputs.save_cache == 'true' && steps.pnpm-cache.outputs.cache-hit != 'true' && inputs.skip_node_cache == 'false'
        with:
          path: |
            ${{ steps.setup.outputs.pnpm_directory }}
          key: |
            generators--pnpm--nx-${{ matrix.nx_version }}--type-${{ matrix.type }}--example-${{ matrix.example }}
