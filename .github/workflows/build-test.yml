name: 'Build & Test'

on:
  workflow_call:
    inputs:
      affected:
        description: Only build & test affected apps & libraries.
        type: boolean
        required: false
        default: true
    outputs:
      affected:
        description: 'Affected apps & libraries'
        value: ${{ jobs.setup.outputs.affected }}
      affectedLength:
        description: 'Number of affected apps & libraries'
        value: ${{ jobs.setup.outputs.affectedLength }}
      affectedApps:
        description: 'Affected apps'
        value: ${{ jobs.setup.outputs.affectedApps }}
      affectedAppsLength:
        description: 'Number of affected apps'
        value: ${{ jobs.setup.outputs.affectedAppsLength }}
      affectedLibs:
        description: 'Affected libraries'
        value: ${{ jobs.setup.outputs.affectedLibs }}
      affectedLibsLength:
        description: 'Number of affected libraries'
        value: ${{ jobs.setup.outputs.affectedLibsLength }}
    secrets:
      NX__TRIPPIN__API_KEY:
        description: 'The Trippin API Key'
        required: true
      NX__WEATHERBIT__API_KEY:
        description: 'The Weatherbit API Key'
        required: true
      NX_CLOUD_ACCESS_TOKEN:
        description: 'The NX Cloud API token'
        required: true

concurrency:
  group: build-test-${{ github.workflow }}-${{ github.ref }}

env:
  NX__TRIPPIN__API_KEY: ${{ secrets.NX__TRIPPIN__API_KEY }}
  NX__WEATHERBIT__API_KEY: ${{ secrets.NX__WEATHERBIT__API_KEY }}
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        node: [lts, latest]
    outputs:
      affected: ${{ steps.affected.affected }}
      affectedLength: ${{ steps.affected.affectedLength }}
      affectedApps: ${{ steps.affected.affectedApps }}
      affectedAppsLength: ${{ steps.affected.affectedAppsLength }}
      affectedLibs: ${{ steps.affected.affectedLibs }}
      affectedLibsLength: ${{ steps.affected.affectedLibsLength }}
    steps:
      - name: Check out repository
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
        with:
          fetch-depth: 0

      - name: Setup
        uses: ./.github/actions/setup
        with:
          node-version: ${{ matrix.node }}

      - name: Affected
        id: affected
        if: matrix.node == 'lts'
        uses: ./.github/actions/nx-affected

      - name: Workspace Lint
        if: matrix.node == 'lts'
        shell: bash
        run: |
          pnpm nx-cloud record -- npx nx workspace-lint

      - name: Format
        if: matrix.node == 'lts'
        shell: bash
        run: |
          pnpm nx-cloud record -- npx nx format:check

      - name: Affected Lint
        if: inputs.affected == 'true' && matrix.node == 'lts'
        shell: bash
        run: |
          pnpm nx affected --target=lint --parallel=3

      - name: Lint
        if: inputs.affected != 'true' && matrix.node == 'lts'
        shell: bash
        run: |
          pnpm nx run-many --target=lint --all --parallel=3

  nx:
    runs-on: ubuntu-latest
    needs: [setup]
    if: needs.setup.outputs.hasAffected == 'true' || inputs.affected != 'true'
    timeout-minutes: 10
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      max-parallel: 3
      fail-fast: false
      matrix:
        node: [lts]
        command: [build, test, validate, e2e, e2e-start]
        experimental: [false]
        include:
          - node: latest
            command: build
            experimental: true
          - node: latest
            command: validate
            experimental: true
          - node: latest
            command: e2e
            experimental: true
          - node: latest
            command: e2e-start
            experimental: true

    name: node-${{ matrix.node }} - ${{ matrix.command }}
    env:
      NX_CLOUD_ENV_NAME: node-${{ matrix.node }}
    steps:
      - name: Check out repository
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
        with:
          fetch-depth: 0

      - name: Setup
        uses: ./.github/actions/setup
        with:
          ignore-cypress-cache: ${{ !startsWith(matrix.command, 'e2e') }}
          node-version: ${{ matrix.node }}

      - name: Affected Build
        if: inputs.affected == 'true' && matrix.command == 'build'
        shell: bash
        run: |
          pnpm nx affected --target=build --parallel=3

      - name: Build
        if: inputs.affected != 'true' && matrix.command == 'build'
        shell: bash
        run: |
          pnpm nx run-many --target=build --all --parallel=3

      - name: Affected Test
        if: inputs.affected == 'true' && matrix.command == 'test'
        shell: bash
        run: |
          pnpm nx affected --target=test --ci --code-coverage --parallel=3

      - name: Test
        if: inputs.affected != 'true' && matrix.command == 'test'
        shell: bash
        run: |
          pnpm nx run-many --target=test --all --ci --code-coverage --parallel=3

      - name: Affected Validate
        if: inputs.affected == 'true' && matrix.command == 'validate'
        shell: bash
        run: |
          pnpm nx affected --target=validate --parallel=2

      - name: Validate
        if: inputs.affected != 'true' && matrix.command == 'validate'
        shell: bash
        run: |
          pnpm nx run-many --target=validate --all --parallel=2

      - name: Affected E2E
        if: inputs.affected == 'true' && matrix.command == 'e2e'
        shell: bash
        run: |
          pnpm nx affected --target=e2e --parallel=3

      - name: E2E
        if: inputs.affected != 'true' && matrix.command == 'e2e'
        shell: bash
        run: |
          pnpm nx run-many --target=e2e --all --parallel=3

      - name: Affected E2E-Start
        if: inputs.affected == 'true' && matrix.command == 'e2e-start'
        shell: bash
        run: |
          pnpm nx affected --target=e2e --configuration=start --parallel=2

      - name: E2E-Start
        if: inputs.affected != 'true' && matrix.command == 'e2e-start'
        shell: bash
        run: |
          pnpm nx run-many --target=e2e --configuration=start --all --parallel=2
