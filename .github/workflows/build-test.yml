name: 'Build & Test'

on:
  workflow_call:
    inputs:
      affected:
        description: Only build & test affected apps & libraries.
        type: boolean
        required: false
        default: true
    outputs:
      affectedApps:
        description: 'Affected apps'
        value: ${{ jobs.setup.outputs.affectedApps }}
    secrets:
      NX__TRIPPIN__API_KEY:
        description: 'The Trippin API Key'
        required: true
      NX_CLOUD_ACCESS_TOKEN:
        description: 'The NX Cloud API token'
        required: true

concurrency:
  group: build-test-${{ github.workflow }}-${{ github.ref }}

env:
  NX__TRIPPIN__API_KEY: ${{ secrets.NX__TRIPPIN__API_KEY }}
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    timeout-minutes: 10
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        node: [lts]
        experimental: [false]
        include:
          - node: latest
            experimental: true
    env:
      NX_CLOUD_ENV_NAME: node-${{ matrix.node }}
    outputs:
      affectedApps: ${{ steps.affected.outputs.affectedApps }}
      hasAffected: ${{ steps.affected.outputs.hasAffected }}
      hasAffectedE2EApps: ${{ steps.affected.outputs.hasAffectedE2EApps }}
      e2e: ${{ steps.outputs.outputs.e2e }}
    steps:
      - name: Check out repository
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3
        with:
          fetch-depth: 0

      - name: Setup
        uses: ./.github/workflows/setup.yml
        with:
          node-version: ${{ matrix.node }}
          save-cache: true

      - name: Affected
        id: affected
        uses: ./.github/actions/nx-affected

      - name: Outputs
        id: outputs
        shell: bash
        run: |
          e2e='${{ steps.affected.outputs.e2eApps }}'

          if [ ${{ inputs.affected }} = true ]; then
            e2e='${{ steps.affected.outputs.affectedE2eApps }}'
          fi

          echo e2e=$e2e
          echo ::set-output name=e2e::$e2e

      - name: Workspace Lint
        if: matrix.node == 'lts'
        shell: bash
        run: |
          pnpm nx-cloud record -- npx nx workspace-lint

      - name: Format
        if: matrix.node == 'lts'
        shell: bash
        run: |
          pnpm nx-cloud record -- npx nx format:check

      - name: Affected Lint
        if: inputs.affected == true && matrix.node == 'lts'
        shell: bash
        run: |
          pnpm nx affected --target=lint --parallel=3

      - name: Lint
        if: inputs.affected != true && matrix.node == 'lts'
        shell: bash
        run: |
          pnpm nx run-many --target=lint --all --parallel=3

      - name: Affected Build
        if: inputs.affected == true
        shell: bash
        run: |
          pnpm nx affected --target=build --parallel=3

      - name: Build
        if: inputs.affected != true
        shell: bash
        run: |
          pnpm nx run-many --target=build --all --parallel=3

      - name: Affected Build Production
        if: inputs.affected == true
        shell: bash
        run: |
          pnpm nx affected --target=build --configuration=production --parallel=3

      - name: Build Production
        if: inputs.affected != true
        shell: bash
        run: |
          pnpm nx run-many --target=build --configuration=production --all --parallel=3

  generator-examples:
    runs-on: ubuntu-latest
    needs: [setup]
    if: needs.setup.outputs.hasAffected == 'true' || inputs.affected != true
    timeout-minutes: 5
    strategy:
      # max-parallel: 2
      fail-fast: false
      matrix:
        node: [lts]
        type: [application, sdk, preset]
        example:
          - 'country-info'
          - 'fake-api'
          - 'javascript-wiki'
          # - 'movies'
          - 'rfam'
          - 'stackexchange'
          - 'star-wars-api'
          - 'trippin'
    name: node-${{ matrix.node }} - ${{ matrix.type }} - ${{ matrix.example }}
    env:
      NX_CLOUD_ENV_NAME: node-${{ matrix.node }}
    steps:
      - name: Check out repository
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3
        with:
          fetch-depth: 0

      - name: Setup
        uses: ./.github/workflows/setup.yml
        with:
          ignore-cypress-cache: ${{ !startsWith(matrix.command, 'e2e') }}
          node-version: ${{ matrix.node }}

      - name: Build Nx-mesh
        shell: bash
        run: |
          pnpm nx run nx-mesh:build

      - name: Generate Example
        shell: bash
        run: |
          pnpm exec nx generate nx-mesh:${{ matrix.type }} \
          ${{ matrix.example }} \
          --example=${{ matrix.example }} \
          --no-interactive

      - name: Build example
        shell: bash
        run: |
          pnpm nx run ${{ matrix.example }}:build

  nx:
    runs-on: ubuntu-latest
    needs: [setup]
    if: needs.setup.outputs.hasAffected == 'true' || inputs.affected != true
    timeout-minutes: 5
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      # max-parallel: 2
      fail-fast: false
      matrix:
        node: [lts]
        command: [test, validate]
        experimental: [false]
        include:
          - node: latest
            command: validate
            experimental: true
    name: node-${{ matrix.node }} - ${{ matrix.command }}
    env:
      NX_CLOUD_ENV_NAME: node-${{ matrix.node }}
    steps:
      - name: Check out repository
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3
        with:
          fetch-depth: 0

      - name: Setup
        uses: ./.github/workflows/setup.yml
        with:
          ignore-cypress-cache: ${{ !startsWith(matrix.command, 'e2e') }}
          node-version: ${{ matrix.node }}

      - name: Affected Test
        if: inputs.affected == true && matrix.command == 'test'
        shell: bash
        run: |
          pnpm nx affected --target=test --ci --code-coverage --parallel=3

      - name: Test
        if: inputs.affected != true && matrix.command == 'test'
        shell: bash
        run: |
          pnpm nx run-many --target=test --all --ci --code-coverage --parallel=3

      - name: Affected Validate
        if: inputs.affected == true && matrix.command == 'validate'
        shell: bash
        run: |
          pnpm nx affected --target=validate --parallel=2

      - name: Validate
        if: inputs.affected != true && matrix.command == 'validate'
        shell: bash
        run: |
          pnpm nx run-many --target=validate --all --parallel=2

  e2e:
    runs-on: ubuntu-latest
    needs: [setup]
    if: (needs.setup.outputs.hasAffected == true && needs.setup.outputs.hasAffectedE2EApps == true) || inputs.affected != true
    timeout-minutes: 15
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      # max-parallel: 2
      fail-fast: false
      matrix:
        node: [lts]
        app: ${{ fromJSON(needs.setup.outputs.e2e) }}
        command: [e2e, e2e-start, e2e-serve, e2e-serve-dev]
        experimental: [false]
        include:
          - node: latest
            app: example-api-gateway-openapi-javascript-wiki-e2e
            command: e2e-serve-dev
            experimental: true
          - node: latest
            app: example-sdk-nextjs-e2e
            command: e2e
            experimental: true
    name: ${{ matrix.node }} / ${{ matrix.command }} / ${{ matrix.app }}
    env:
      NX_CLOUD_ENV_NAME: node-${{ matrix.node }}
    steps:
      - name: Check out repository
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3
        with:
          fetch-depth: 0

      - name: Setup
        uses: ./.github/workflows/setup.yml
        with:
          node-version: ${{ matrix.node }}

      - name: E2E
        timeout-minutes: 8
        if: matrix.command == 'e2e'
        uses: cypress-io/github-action@19ae4d7502bfdedf2a3c47961e02ea209aad367b # v5.0.2
        with:
          install: false
          command: |
            pnpm nx run ${{ matrix.app }}:e2e

      - name: E2E (Start)
        timeout-minutes: 8
        if: matrix.command == 'e2e-start'
        uses: cypress-io/github-action@19ae4d7502bfdedf2a3c47961e02ea209aad367b # v5.0.2
        with:
          install: false
          command: |
            pnpm nx run ${{ matrix.app }}:e2e --configuration=start

      - name: E2E (Serve)
        timeout-minutes: 8
        if: matrix.command == 'e2e-serve'
        uses: cypress-io/github-action@19ae4d7502bfdedf2a3c47961e02ea209aad367b # v5.0.2
        with:
          install: false
          command: |
            pnpm nx run ${{ matrix.app }}:e2e --configuration=serve

      - name: E2E (Serve Dev)
        timeout-minutes: 8
        if: matrix.command == 'e2e-serve-dev'
        uses: cypress-io/github-action@19ae4d7502bfdedf2a3c47961e02ea209aad367b # v5.0.2
        with:
          install: false
          command: |
            pnpm nx run ${{ matrix.app }}:e2e --configuration=serve-dev
