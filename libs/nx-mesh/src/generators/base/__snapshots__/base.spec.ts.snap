// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generators/base app directory --babelJest should use babel for jest 1`] = `
"/* eslint-disable */
export default {
  displayName: 'my-mesh-app',
  preset: '../../jest.preset.js',
  testEnvironment: 'node',
  transform: {
    '^.+\\\\\\\\.[tj]s$': 'babel-jest'
  },
  moduleFileExtensions: ['ts', 'js', 'html'],
  coverageDirectory: '../../coverage/apps/my-mesh-app'
};
"
`;

exports[`generators/base app directory --linter should use eslint for linting 1`] = `
"{
  \\"extends\\": [
    \\"../../.eslintrc.json\\"
  ],
  \\"ignorePatterns\\": [
    \\"!**/*\\",
    \\".mesh\\"
  ],
  \\"overrides\\": [
    {
      \\"files\\": [
        \\"*.ts\\",
        \\"*.tsx\\",
        \\"*.js\\",
        \\"*.jsx\\"
      ],
      \\"rules\\": {}
    },
    {
      \\"files\\": [
        \\"*.ts\\",
        \\"*.tsx\\"
      ],
      \\"rules\\": {}
    },
    {
      \\"files\\": [
        \\"*.js\\",
        \\"*.jsx\\"
      ],
      \\"rules\\": {}
    }
  ]
}
"
`;

exports[`generators/base app directory --meshConfig should create a cjs config when --meshConfig=%s 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'JavaScript Wiki',
    handler: {
      openapi: {
        source: 'https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base app directory --meshConfig should create a js config when --meshConfig=%s 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'JavaScript Wiki',
    handler: {
      openapi: {
        source: 'https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base app directory --meshConfig should create a json config when --meshConfig=%s 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"JavaScript Wiki\\",
    \\"handler\\": {
      \\"openapi\\": {
        \\"source\\": \\"https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml\\"
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base app directory --meshConfig should create a yml config by default 1`] = `
"
sources:
  - name: JavaScript Wiki
    handler:
      openapi:
        source: https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base app directory --meshConfig should create a yml config when --meshConfig=%s 1`] = `
"
sources:
  - name: JavaScript Wiki
    handler:
      openapi:
        source: https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base app directory --meshExampleProject should create a javascriptWiki cjs config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'JavaScript Wiki',
    handler: {
      openapi: {
        source: 'https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base app directory --meshExampleProject should create a javascriptWiki config by default 1`] = `
"
sources:
  - name: JavaScript Wiki
    handler:
      openapi:
        source: https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base app directory --meshExampleProject should create a javascriptWiki js config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'JavaScript Wiki',
    handler: {
      openapi: {
        source: 'https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base app directory --meshExampleProject should create a javascriptWiki json config 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"JavaScript Wiki\\",
    \\"handler\\": {
      \\"openapi\\": {
        \\"source\\": \\"https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml\\"
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base app directory --meshExampleProject should create a javascriptWiki yml config 1`] = `
"
sources:
  - name: JavaScript Wiki
    handler:
      openapi:
        source: https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base app directory --meshExampleProject should create a stackexchange cjs config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'StackExchange',
    handler: {
      openapi: {
        source: 'https://raw.githubusercontent.com/grokify/api-specs/master/stackexchange/stackexchange-api-v2.2_openapi-v3.0.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base app directory --meshExampleProject should create a stackexchange js config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'StackExchange',
    handler: {
      openapi: {
        source: 'https://raw.githubusercontent.com/grokify/api-specs/master/stackexchange/stackexchange-api-v2.2_openapi-v3.0.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base app directory --meshExampleProject should create a stackexchange json config 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"StackExchange\\",
    \\"handler\\": {
      \\"openapi\\": {
        \\"source\\": \\"https://raw.githubusercontent.com/grokify/api-specs/master/stackexchange/stackexchange-api-v2.2_openapi-v3.0.yaml\\"
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base app directory --meshExampleProject should create a stackexchange yml config 1`] = `
"
sources:
  - name: StackExchange
    handler:
      openapi:
        source: https://raw.githubusercontent.com/grokify/api-specs/master/stackexchange/stackexchange-api-v2.2_openapi-v3.0.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base app directory --meshExampleProject should create a trippin cjs config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'TripPin',
    handler: {
      odata: {
        source: 'https://services.odata.org/TripPinRESTierService/(S({env.NX__TRIPPIN__API_KEY}))/',
        batch: 'multipart',
        expandNavProps: true,
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base app directory --meshExampleProject should create a trippin js config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'TripPin',
    handler: {
      odata: {
        source: 'https://services.odata.org/TripPinRESTierService/(S({env.NX__TRIPPIN__API_KEY}))/',
        batch: 'multipart',
        expandNavProps: true,
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base app directory --meshExampleProject should create a trippin json config 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"TripPin\\",
    \\"handler\\": {
      \\"odata\\": {
        \\"source\\": \\"https://services.odata.org/TripPinRESTierService/(S({env.NX__TRIPPIN__API_KEY}))/\\",
        \\"batch\\": \\"multipart\\",
        \\"expandNavProps\\": true
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base app directory --meshExampleProject should create a trippin yml config 1`] = `
"
sources:
  - name: TripPin
    handler:
      odata:
        source: https://services.odata.org/TripPinRESTierService/(S({env.NX__TRIPPIN__API_KEY}))/
        batch: multipart
        expandNavProps: true

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base app directory --meshExampleProject should create a weatherbit cjs config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'Weatherbit',
    handler: {
      newOpenapi: {
        baseUrl: 'http://api.weatherbit.io/v2.0/',
        oasFilePath: 'https://www.weatherbit.io/static/swagger.json',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base app directory --meshExampleProject should create a weatherbit js config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'Weatherbit',
    handler: {
      newOpenapi: {
        baseUrl: 'http://api.weatherbit.io/v2.0/',
        oasFilePath: 'https://www.weatherbit.io/static/swagger.json',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base app directory --meshExampleProject should create a weatherbit json config 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"Weatherbit\\",
    \\"handler\\": {
      \\"newOpenapi\\": {
        \\"baseUrl\\": \\"http://api.weatherbit.io/v2.0/\\",
        \\"oasFilePath\\": \\"https://www.weatherbit.io/static/swagger.json\\"
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base app directory --meshExampleProject should create a weatherbit yml config 1`] = `
"
sources:
  - name: Weatherbit
    handler:
      newOpenapi:
        baseUrl: http://api.weatherbit.io/v2.0/
        oasFilePath: https://www.weatherbit.io/static/swagger.json

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base app directory --unitTestRunner should add a jest config if the unitTestRunner is jest 1`] = `
"/* eslint-disable */
export default {
  displayName: 'my-mesh-app',
  preset: '../../jest.preset.js',
  globals: {
    'ts-jest': {
      tsconfig: '<rootDir>/tsconfig.spec.json',
    }
  },
  testEnvironment: 'node',
  transform: {
    '^.+\\\\\\\\.[tj]s$': 'ts-jest'
  },
  moduleFileExtensions: ['ts', 'js', 'html'],
  coverageDirectory: '../../coverage/apps/my-mesh-app'
};
"
`;

exports[`generators/base app with standalone config --babelJest should use babel for jest 1`] = `
"/* eslint-disable */
export default {
  displayName: 'my-mesh-app',
  preset: '../../jest.preset.js',
  testEnvironment: 'node',
  transform: {
    '^.+\\\\\\\\.[tj]s$': 'babel-jest'
  },
  moduleFileExtensions: ['ts', 'js', 'html'],
  coverageDirectory: '../../coverage/apps/my-mesh-app'
};
"
`;

exports[`generators/base app with standalone config --linter should use eslint for linting 1`] = `
"{
  \\"extends\\": [
    \\"../../.eslintrc.json\\"
  ],
  \\"ignorePatterns\\": [
    \\"!**/*\\",
    \\".mesh\\"
  ],
  \\"overrides\\": [
    {
      \\"files\\": [
        \\"*.ts\\",
        \\"*.tsx\\",
        \\"*.js\\",
        \\"*.jsx\\"
      ],
      \\"rules\\": {}
    },
    {
      \\"files\\": [
        \\"*.ts\\",
        \\"*.tsx\\"
      ],
      \\"rules\\": {}
    },
    {
      \\"files\\": [
        \\"*.js\\",
        \\"*.jsx\\"
      ],
      \\"rules\\": {}
    }
  ]
}
"
`;

exports[`generators/base app with standalone config --meshConfig should create a cjs config when --meshConfig=%s 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'JavaScript Wiki',
    handler: {
      openapi: {
        source: 'https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base app with standalone config --meshConfig should create a js config when --meshConfig=%s 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'JavaScript Wiki',
    handler: {
      openapi: {
        source: 'https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base app with standalone config --meshConfig should create a json config when --meshConfig=%s 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"JavaScript Wiki\\",
    \\"handler\\": {
      \\"openapi\\": {
        \\"source\\": \\"https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml\\"
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base app with standalone config --meshConfig should create a yml config by default 1`] = `
"
sources:
  - name: JavaScript Wiki
    handler:
      openapi:
        source: https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base app with standalone config --meshConfig should create a yml config when --meshConfig=%s 1`] = `
"
sources:
  - name: JavaScript Wiki
    handler:
      openapi:
        source: https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base app with standalone config --meshExampleProject should create a javascriptWiki cjs config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'JavaScript Wiki',
    handler: {
      openapi: {
        source: 'https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base app with standalone config --meshExampleProject should create a javascriptWiki config by default 1`] = `
"
sources:
  - name: JavaScript Wiki
    handler:
      openapi:
        source: https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base app with standalone config --meshExampleProject should create a javascriptWiki js config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'JavaScript Wiki',
    handler: {
      openapi: {
        source: 'https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base app with standalone config --meshExampleProject should create a javascriptWiki json config 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"JavaScript Wiki\\",
    \\"handler\\": {
      \\"openapi\\": {
        \\"source\\": \\"https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml\\"
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base app with standalone config --meshExampleProject should create a javascriptWiki yml config 1`] = `
"
sources:
  - name: JavaScript Wiki
    handler:
      openapi:
        source: https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base app with standalone config --meshExampleProject should create a stackexchange cjs config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'StackExchange',
    handler: {
      openapi: {
        source: 'https://raw.githubusercontent.com/grokify/api-specs/master/stackexchange/stackexchange-api-v2.2_openapi-v3.0.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base app with standalone config --meshExampleProject should create a stackexchange js config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'StackExchange',
    handler: {
      openapi: {
        source: 'https://raw.githubusercontent.com/grokify/api-specs/master/stackexchange/stackexchange-api-v2.2_openapi-v3.0.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base app with standalone config --meshExampleProject should create a stackexchange json config 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"StackExchange\\",
    \\"handler\\": {
      \\"openapi\\": {
        \\"source\\": \\"https://raw.githubusercontent.com/grokify/api-specs/master/stackexchange/stackexchange-api-v2.2_openapi-v3.0.yaml\\"
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base app with standalone config --meshExampleProject should create a stackexchange yml config 1`] = `
"
sources:
  - name: StackExchange
    handler:
      openapi:
        source: https://raw.githubusercontent.com/grokify/api-specs/master/stackexchange/stackexchange-api-v2.2_openapi-v3.0.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base app with standalone config --meshExampleProject should create a trippin cjs config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'TripPin',
    handler: {
      odata: {
        source: 'https://services.odata.org/TripPinRESTierService/(S({env.NX__TRIPPIN__API_KEY}))/',
        batch: 'multipart',
        expandNavProps: true,
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base app with standalone config --meshExampleProject should create a trippin js config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'TripPin',
    handler: {
      odata: {
        source: 'https://services.odata.org/TripPinRESTierService/(S({env.NX__TRIPPIN__API_KEY}))/',
        batch: 'multipart',
        expandNavProps: true,
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base app with standalone config --meshExampleProject should create a trippin json config 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"TripPin\\",
    \\"handler\\": {
      \\"odata\\": {
        \\"source\\": \\"https://services.odata.org/TripPinRESTierService/(S({env.NX__TRIPPIN__API_KEY}))/\\",
        \\"batch\\": \\"multipart\\",
        \\"expandNavProps\\": true
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base app with standalone config --meshExampleProject should create a trippin yml config 1`] = `
"
sources:
  - name: TripPin
    handler:
      odata:
        source: https://services.odata.org/TripPinRESTierService/(S({env.NX__TRIPPIN__API_KEY}))/
        batch: multipart
        expandNavProps: true

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base app with standalone config --meshExampleProject should create a weatherbit cjs config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'Weatherbit',
    handler: {
      newOpenapi: {
        baseUrl: 'http://api.weatherbit.io/v2.0/',
        oasFilePath: 'https://www.weatherbit.io/static/swagger.json',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base app with standalone config --meshExampleProject should create a weatherbit js config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'Weatherbit',
    handler: {
      newOpenapi: {
        baseUrl: 'http://api.weatherbit.io/v2.0/',
        oasFilePath: 'https://www.weatherbit.io/static/swagger.json',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base app with standalone config --meshExampleProject should create a weatherbit json config 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"Weatherbit\\",
    \\"handler\\": {
      \\"newOpenapi\\": {
        \\"baseUrl\\": \\"http://api.weatherbit.io/v2.0/\\",
        \\"oasFilePath\\": \\"https://www.weatherbit.io/static/swagger.json\\"
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base app with standalone config --meshExampleProject should create a weatherbit yml config 1`] = `
"
sources:
  - name: Weatherbit
    handler:
      newOpenapi:
        baseUrl: http://api.weatherbit.io/v2.0/
        oasFilePath: https://www.weatherbit.io/static/swagger.json

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base app with standalone config --unitTestRunner should add a jest config if the unitTestRunner is jest 1`] = `
"/* eslint-disable */
export default {
  displayName: 'my-mesh-app',
  preset: '../../jest.preset.js',
  globals: {
    'ts-jest': {
      tsconfig: '<rootDir>/tsconfig.spec.json',
    }
  },
  testEnvironment: 'node',
  transform: {
    '^.+\\\\\\\\.[tj]s$': 'ts-jest'
  },
  moduleFileExtensions: ['ts', 'js', 'html'],
  coverageDirectory: '../../coverage/apps/my-mesh-app'
};
"
`;

exports[`generators/base lib directory --babelJest should use babel for jest 1`] = `
"/* eslint-disable */
export default {
  displayName: 'my-mesh-lib',
  preset: '../../jest.preset.js',
  testEnvironment: 'node',
  transform: {
    '^.+\\\\\\\\.[tj]sx?$': 'babel-jest'
  },
  moduleFileExtensions: ['ts', 'tsx', 'js', 'jsx'],
  coverageDirectory: '../../coverage/libs/my-mesh-lib'
};
"
`;

exports[`generators/base lib directory --linter should use eslint for linting 1`] = `
"{
  \\"extends\\": [
    \\"../../.eslintrc.json\\"
  ],
  \\"ignorePatterns\\": [
    \\"!**/*\\",
    \\".mesh\\"
  ],
  \\"overrides\\": [
    {
      \\"files\\": [
        \\"*.ts\\",
        \\"*.tsx\\",
        \\"*.js\\",
        \\"*.jsx\\"
      ],
      \\"rules\\": {}
    },
    {
      \\"files\\": [
        \\"*.ts\\",
        \\"*.tsx\\"
      ],
      \\"rules\\": {}
    },
    {
      \\"files\\": [
        \\"*.js\\",
        \\"*.jsx\\"
      ],
      \\"rules\\": {}
    }
  ]
}
"
`;

exports[`generators/base lib directory --meshConfig should create a cjs config when --meshConfig=%s 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'JavaScript Wiki',
    handler: {
      openapi: {
        source: 'https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base lib directory --meshConfig should create a js config when --meshConfig=%s 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'JavaScript Wiki',
    handler: {
      openapi: {
        source: 'https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base lib directory --meshConfig should create a json config when --meshConfig=%s 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"JavaScript Wiki\\",
    \\"handler\\": {
      \\"openapi\\": {
        \\"source\\": \\"https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml\\"
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base lib directory --meshConfig should create a yml config by default 1`] = `
"
sources:
  - name: JavaScript Wiki
    handler:
      openapi:
        source: https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base lib directory --meshConfig should create a yml config when --meshConfig=%s 1`] = `
"
sources:
  - name: JavaScript Wiki
    handler:
      openapi:
        source: https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base lib directory --meshExampleProject should create a javascriptWiki cjs config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'JavaScript Wiki',
    handler: {
      openapi: {
        source: 'https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base lib directory --meshExampleProject should create a javascriptWiki config by default 1`] = `
"
sources:
  - name: JavaScript Wiki
    handler:
      openapi:
        source: https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base lib directory --meshExampleProject should create a javascriptWiki js config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'JavaScript Wiki',
    handler: {
      openapi: {
        source: 'https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base lib directory --meshExampleProject should create a javascriptWiki json config 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"JavaScript Wiki\\",
    \\"handler\\": {
      \\"openapi\\": {
        \\"source\\": \\"https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml\\"
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base lib directory --meshExampleProject should create a javascriptWiki yml config 1`] = `
"
sources:
  - name: JavaScript Wiki
    handler:
      openapi:
        source: https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base lib directory --meshExampleProject should create a stackexchange cjs config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'StackExchange',
    handler: {
      openapi: {
        source: 'https://raw.githubusercontent.com/grokify/api-specs/master/stackexchange/stackexchange-api-v2.2_openapi-v3.0.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base lib directory --meshExampleProject should create a stackexchange js config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'StackExchange',
    handler: {
      openapi: {
        source: 'https://raw.githubusercontent.com/grokify/api-specs/master/stackexchange/stackexchange-api-v2.2_openapi-v3.0.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base lib directory --meshExampleProject should create a stackexchange json config 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"StackExchange\\",
    \\"handler\\": {
      \\"openapi\\": {
        \\"source\\": \\"https://raw.githubusercontent.com/grokify/api-specs/master/stackexchange/stackexchange-api-v2.2_openapi-v3.0.yaml\\"
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base lib directory --meshExampleProject should create a stackexchange yml config 1`] = `
"
sources:
  - name: StackExchange
    handler:
      openapi:
        source: https://raw.githubusercontent.com/grokify/api-specs/master/stackexchange/stackexchange-api-v2.2_openapi-v3.0.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base lib directory --meshExampleProject should create a trippin cjs config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'TripPin',
    handler: {
      odata: {
        source: 'https://services.odata.org/TripPinRESTierService/(S({env.NX__TRIPPIN__API_KEY}))/',
        batch: 'multipart',
        expandNavProps: true,
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base lib directory --meshExampleProject should create a trippin js config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'TripPin',
    handler: {
      odata: {
        source: 'https://services.odata.org/TripPinRESTierService/(S({env.NX__TRIPPIN__API_KEY}))/',
        batch: 'multipart',
        expandNavProps: true,
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base lib directory --meshExampleProject should create a trippin json config 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"TripPin\\",
    \\"handler\\": {
      \\"odata\\": {
        \\"source\\": \\"https://services.odata.org/TripPinRESTierService/(S({env.NX__TRIPPIN__API_KEY}))/\\",
        \\"batch\\": \\"multipart\\",
        \\"expandNavProps\\": true
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base lib directory --meshExampleProject should create a trippin yml config 1`] = `
"
sources:
  - name: TripPin
    handler:
      odata:
        source: https://services.odata.org/TripPinRESTierService/(S({env.NX__TRIPPIN__API_KEY}))/
        batch: multipart
        expandNavProps: true

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base lib directory --meshExampleProject should create a weatherbit cjs config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'Weatherbit',
    handler: {
      newOpenapi: {
        baseUrl: 'http://api.weatherbit.io/v2.0/',
        oasFilePath: 'https://www.weatherbit.io/static/swagger.json',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base lib directory --meshExampleProject should create a weatherbit js config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'Weatherbit',
    handler: {
      newOpenapi: {
        baseUrl: 'http://api.weatherbit.io/v2.0/',
        oasFilePath: 'https://www.weatherbit.io/static/swagger.json',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base lib directory --meshExampleProject should create a weatherbit json config 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"Weatherbit\\",
    \\"handler\\": {
      \\"newOpenapi\\": {
        \\"baseUrl\\": \\"http://api.weatherbit.io/v2.0/\\",
        \\"oasFilePath\\": \\"https://www.weatherbit.io/static/swagger.json\\"
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base lib directory --meshExampleProject should create a weatherbit yml config 1`] = `
"
sources:
  - name: Weatherbit
    handler:
      newOpenapi:
        baseUrl: http://api.weatherbit.io/v2.0/
        oasFilePath: https://www.weatherbit.io/static/swagger.json

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base lib directory --unitTestRunner should add a jest config if the unitTestRunner is jest 1`] = `
"/* eslint-disable */
export default {
  displayName: 'my-mesh-lib',
  preset: '../../jest.preset.js',
  globals: {
    'ts-jest': {
      tsconfig: '<rootDir>/tsconfig.spec.json',
    }
  },
  testEnvironment: 'node',
  transform: {
    '^.+\\\\\\\\.[tj]sx?$': 'ts-jest'
  },
  moduleFileExtensions: ['ts', 'tsx', 'js', 'jsx'],
  coverageDirectory: '../../coverage/libs/my-mesh-lib'
};
"
`;

exports[`generators/base lib with standalone config --babelJest should use babel for jest 1`] = `
"/* eslint-disable */
export default {
  displayName: 'my-mesh-lib',
  preset: '../../jest.preset.js',
  testEnvironment: 'node',
  transform: {
    '^.+\\\\\\\\.[tj]sx?$': 'babel-jest'
  },
  moduleFileExtensions: ['ts', 'tsx', 'js', 'jsx'],
  coverageDirectory: '../../coverage/libs/my-mesh-lib'
};
"
`;

exports[`generators/base lib with standalone config --linter should use eslint for linting 1`] = `
"{
  \\"extends\\": [
    \\"../../.eslintrc.json\\"
  ],
  \\"ignorePatterns\\": [
    \\"!**/*\\",
    \\".mesh\\"
  ],
  \\"overrides\\": [
    {
      \\"files\\": [
        \\"*.ts\\",
        \\"*.tsx\\",
        \\"*.js\\",
        \\"*.jsx\\"
      ],
      \\"rules\\": {}
    },
    {
      \\"files\\": [
        \\"*.ts\\",
        \\"*.tsx\\"
      ],
      \\"rules\\": {}
    },
    {
      \\"files\\": [
        \\"*.js\\",
        \\"*.jsx\\"
      ],
      \\"rules\\": {}
    }
  ]
}
"
`;

exports[`generators/base lib with standalone config --meshConfig should create a cjs config when --meshConfig=%s 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'JavaScript Wiki',
    handler: {
      openapi: {
        source: 'https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base lib with standalone config --meshConfig should create a js config when --meshConfig=%s 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'JavaScript Wiki',
    handler: {
      openapi: {
        source: 'https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base lib with standalone config --meshConfig should create a json config when --meshConfig=%s 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"JavaScript Wiki\\",
    \\"handler\\": {
      \\"openapi\\": {
        \\"source\\": \\"https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml\\"
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base lib with standalone config --meshConfig should create a yml config by default 1`] = `
"
sources:
  - name: JavaScript Wiki
    handler:
      openapi:
        source: https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base lib with standalone config --meshConfig should create a yml config when --meshConfig=%s 1`] = `
"
sources:
  - name: JavaScript Wiki
    handler:
      openapi:
        source: https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base lib with standalone config --meshExampleProject should create a javascriptWiki cjs config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'JavaScript Wiki',
    handler: {
      openapi: {
        source: 'https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base lib with standalone config --meshExampleProject should create a javascriptWiki config by default 1`] = `
"
sources:
  - name: JavaScript Wiki
    handler:
      openapi:
        source: https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base lib with standalone config --meshExampleProject should create a javascriptWiki js config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'JavaScript Wiki',
    handler: {
      openapi: {
        source: 'https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base lib with standalone config --meshExampleProject should create a javascriptWiki json config 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"JavaScript Wiki\\",
    \\"handler\\": {
      \\"openapi\\": {
        \\"source\\": \\"https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml\\"
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base lib with standalone config --meshExampleProject should create a javascriptWiki yml config 1`] = `
"
sources:
  - name: JavaScript Wiki
    handler:
      openapi:
        source: https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base lib with standalone config --meshExampleProject should create a stackexchange cjs config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'StackExchange',
    handler: {
      openapi: {
        source: 'https://raw.githubusercontent.com/grokify/api-specs/master/stackexchange/stackexchange-api-v2.2_openapi-v3.0.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base lib with standalone config --meshExampleProject should create a stackexchange js config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'StackExchange',
    handler: {
      openapi: {
        source: 'https://raw.githubusercontent.com/grokify/api-specs/master/stackexchange/stackexchange-api-v2.2_openapi-v3.0.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base lib with standalone config --meshExampleProject should create a stackexchange json config 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"StackExchange\\",
    \\"handler\\": {
      \\"openapi\\": {
        \\"source\\": \\"https://raw.githubusercontent.com/grokify/api-specs/master/stackexchange/stackexchange-api-v2.2_openapi-v3.0.yaml\\"
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base lib with standalone config --meshExampleProject should create a stackexchange yml config 1`] = `
"
sources:
  - name: StackExchange
    handler:
      openapi:
        source: https://raw.githubusercontent.com/grokify/api-specs/master/stackexchange/stackexchange-api-v2.2_openapi-v3.0.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base lib with standalone config --meshExampleProject should create a trippin cjs config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'TripPin',
    handler: {
      odata: {
        source: 'https://services.odata.org/TripPinRESTierService/(S({env.NX__TRIPPIN__API_KEY}))/',
        batch: 'multipart',
        expandNavProps: true,
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base lib with standalone config --meshExampleProject should create a trippin js config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'TripPin',
    handler: {
      odata: {
        source: 'https://services.odata.org/TripPinRESTierService/(S({env.NX__TRIPPIN__API_KEY}))/',
        batch: 'multipart',
        expandNavProps: true,
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base lib with standalone config --meshExampleProject should create a trippin json config 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"TripPin\\",
    \\"handler\\": {
      \\"odata\\": {
        \\"source\\": \\"https://services.odata.org/TripPinRESTierService/(S({env.NX__TRIPPIN__API_KEY}))/\\",
        \\"batch\\": \\"multipart\\",
        \\"expandNavProps\\": true
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base lib with standalone config --meshExampleProject should create a trippin yml config 1`] = `
"
sources:
  - name: TripPin
    handler:
      odata:
        source: https://services.odata.org/TripPinRESTierService/(S({env.NX__TRIPPIN__API_KEY}))/
        batch: multipart
        expandNavProps: true

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base lib with standalone config --meshExampleProject should create a weatherbit cjs config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'Weatherbit',
    handler: {
      newOpenapi: {
        baseUrl: 'http://api.weatherbit.io/v2.0/',
        oasFilePath: 'https://www.weatherbit.io/static/swagger.json',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base lib with standalone config --meshExampleProject should create a weatherbit js config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'Weatherbit',
    handler: {
      newOpenapi: {
        baseUrl: 'http://api.weatherbit.io/v2.0/',
        oasFilePath: 'https://www.weatherbit.io/static/swagger.json',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base lib with standalone config --meshExampleProject should create a weatherbit json config 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"Weatherbit\\",
    \\"handler\\": {
      \\"newOpenapi\\": {
        \\"baseUrl\\": \\"http://api.weatherbit.io/v2.0/\\",
        \\"oasFilePath\\": \\"https://www.weatherbit.io/static/swagger.json\\"
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base lib with standalone config --meshExampleProject should create a weatherbit yml config 1`] = `
"
sources:
  - name: Weatherbit
    handler:
      newOpenapi:
        baseUrl: http://api.weatherbit.io/v2.0/
        oasFilePath: https://www.weatherbit.io/static/swagger.json

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base lib with standalone config --unitTestRunner should add a jest config if the unitTestRunner is jest 1`] = `
"/* eslint-disable */
export default {
  displayName: 'my-mesh-lib',
  preset: '../../jest.preset.js',
  globals: {
    'ts-jest': {
      tsconfig: '<rootDir>/tsconfig.spec.json',
    }
  },
  testEnvironment: 'node',
  transform: {
    '^.+\\\\\\\\.[tj]sx?$': 'ts-jest'
  },
  moduleFileExtensions: ['ts', 'tsx', 'js', 'jsx'],
  coverageDirectory: '../../coverage/libs/my-mesh-lib'
};
"
`;

exports[`generators/base nested within app directory --babelJest should use babel for jest 1`] = `
"/* eslint-disable */
export default {
  displayName: 'test-my-mesh-app',
  preset: '../../../jest.preset.js',
  testEnvironment: 'node',
  transform: {
    '^.+\\\\\\\\.[tj]s$': 'babel-jest'
  },
  moduleFileExtensions: ['ts', 'js', 'html'],
  coverageDirectory: '../../../coverage/apps/test/my-mesh-app'
};
"
`;

exports[`generators/base nested within app directory --linter should use eslint for linting 1`] = `
"{
  \\"extends\\": [
    \\"../../../.eslintrc.json\\"
  ],
  \\"ignorePatterns\\": [
    \\"!**/*\\",
    \\".mesh\\"
  ],
  \\"overrides\\": [
    {
      \\"files\\": [
        \\"*.ts\\",
        \\"*.tsx\\",
        \\"*.js\\",
        \\"*.jsx\\"
      ],
      \\"rules\\": {}
    },
    {
      \\"files\\": [
        \\"*.ts\\",
        \\"*.tsx\\"
      ],
      \\"rules\\": {}
    },
    {
      \\"files\\": [
        \\"*.js\\",
        \\"*.jsx\\"
      ],
      \\"rules\\": {}
    }
  ]
}
"
`;

exports[`generators/base nested within app directory --meshConfig should create a cjs config when --meshConfig=%s 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'JavaScript Wiki',
    handler: {
      openapi: {
        source: 'https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base nested within app directory --meshConfig should create a js config when --meshConfig=%s 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'JavaScript Wiki',
    handler: {
      openapi: {
        source: 'https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base nested within app directory --meshConfig should create a json config when --meshConfig=%s 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"JavaScript Wiki\\",
    \\"handler\\": {
      \\"openapi\\": {
        \\"source\\": \\"https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml\\"
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base nested within app directory --meshConfig should create a yml config by default 1`] = `
"
sources:
  - name: JavaScript Wiki
    handler:
      openapi:
        source: https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base nested within app directory --meshConfig should create a yml config when --meshConfig=%s 1`] = `
"
sources:
  - name: JavaScript Wiki
    handler:
      openapi:
        source: https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base nested within app directory --meshExampleProject should create a javascriptWiki cjs config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'JavaScript Wiki',
    handler: {
      openapi: {
        source: 'https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base nested within app directory --meshExampleProject should create a javascriptWiki config by default 1`] = `
"
sources:
  - name: JavaScript Wiki
    handler:
      openapi:
        source: https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base nested within app directory --meshExampleProject should create a javascriptWiki js config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'JavaScript Wiki',
    handler: {
      openapi: {
        source: 'https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base nested within app directory --meshExampleProject should create a javascriptWiki json config 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"JavaScript Wiki\\",
    \\"handler\\": {
      \\"openapi\\": {
        \\"source\\": \\"https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml\\"
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base nested within app directory --meshExampleProject should create a javascriptWiki yml config 1`] = `
"
sources:
  - name: JavaScript Wiki
    handler:
      openapi:
        source: https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base nested within app directory --meshExampleProject should create a stackexchange cjs config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'StackExchange',
    handler: {
      openapi: {
        source: 'https://raw.githubusercontent.com/grokify/api-specs/master/stackexchange/stackexchange-api-v2.2_openapi-v3.0.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base nested within app directory --meshExampleProject should create a stackexchange js config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'StackExchange',
    handler: {
      openapi: {
        source: 'https://raw.githubusercontent.com/grokify/api-specs/master/stackexchange/stackexchange-api-v2.2_openapi-v3.0.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base nested within app directory --meshExampleProject should create a stackexchange json config 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"StackExchange\\",
    \\"handler\\": {
      \\"openapi\\": {
        \\"source\\": \\"https://raw.githubusercontent.com/grokify/api-specs/master/stackexchange/stackexchange-api-v2.2_openapi-v3.0.yaml\\"
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base nested within app directory --meshExampleProject should create a stackexchange yml config 1`] = `
"
sources:
  - name: StackExchange
    handler:
      openapi:
        source: https://raw.githubusercontent.com/grokify/api-specs/master/stackexchange/stackexchange-api-v2.2_openapi-v3.0.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base nested within app directory --meshExampleProject should create a trippin cjs config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'TripPin',
    handler: {
      odata: {
        source: 'https://services.odata.org/TripPinRESTierService/(S({env.NX__TRIPPIN__API_KEY}))/',
        batch: 'multipart',
        expandNavProps: true,
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base nested within app directory --meshExampleProject should create a trippin js config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'TripPin',
    handler: {
      odata: {
        source: 'https://services.odata.org/TripPinRESTierService/(S({env.NX__TRIPPIN__API_KEY}))/',
        batch: 'multipart',
        expandNavProps: true,
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base nested within app directory --meshExampleProject should create a trippin json config 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"TripPin\\",
    \\"handler\\": {
      \\"odata\\": {
        \\"source\\": \\"https://services.odata.org/TripPinRESTierService/(S({env.NX__TRIPPIN__API_KEY}))/\\",
        \\"batch\\": \\"multipart\\",
        \\"expandNavProps\\": true
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base nested within app directory --meshExampleProject should create a trippin yml config 1`] = `
"
sources:
  - name: TripPin
    handler:
      odata:
        source: https://services.odata.org/TripPinRESTierService/(S({env.NX__TRIPPIN__API_KEY}))/
        batch: multipart
        expandNavProps: true

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base nested within app directory --meshExampleProject should create a weatherbit cjs config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'Weatherbit',
    handler: {
      newOpenapi: {
        baseUrl: 'http://api.weatherbit.io/v2.0/',
        oasFilePath: 'https://www.weatherbit.io/static/swagger.json',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base nested within app directory --meshExampleProject should create a weatherbit js config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'Weatherbit',
    handler: {
      newOpenapi: {
        baseUrl: 'http://api.weatherbit.io/v2.0/',
        oasFilePath: 'https://www.weatherbit.io/static/swagger.json',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base nested within app directory --meshExampleProject should create a weatherbit json config 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"Weatherbit\\",
    \\"handler\\": {
      \\"newOpenapi\\": {
        \\"baseUrl\\": \\"http://api.weatherbit.io/v2.0/\\",
        \\"oasFilePath\\": \\"https://www.weatherbit.io/static/swagger.json\\"
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base nested within app directory --meshExampleProject should create a weatherbit yml config 1`] = `
"
sources:
  - name: Weatherbit
    handler:
      newOpenapi:
        baseUrl: http://api.weatherbit.io/v2.0/
        oasFilePath: https://www.weatherbit.io/static/swagger.json

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base nested within app directory --unitTestRunner should add a jest config if the unitTestRunner is jest 1`] = `
"/* eslint-disable */
export default {
  displayName: 'test-my-mesh-app',
  preset: '../../../jest.preset.js',
  globals: {
    'ts-jest': {
      tsconfig: '<rootDir>/tsconfig.spec.json',
    }
  },
  testEnvironment: 'node',
  transform: {
    '^.+\\\\\\\\.[tj]s$': 'ts-jest'
  },
  moduleFileExtensions: ['ts', 'js', 'html'],
  coverageDirectory: '../../../coverage/apps/test/my-mesh-app'
};
"
`;

exports[`generators/base nested within lib directory --babelJest should use babel for jest 1`] = `
"/* eslint-disable */
export default {
  displayName: 'test-my-mesh-lib',
  preset: '../../../jest.preset.js',
  testEnvironment: 'node',
  transform: {
    '^.+\\\\\\\\.[tj]sx?$': 'babel-jest'
  },
  moduleFileExtensions: ['ts', 'tsx', 'js', 'jsx'],
  coverageDirectory: '../../../coverage/libs/test/my-mesh-lib'
};
"
`;

exports[`generators/base nested within lib directory --linter should use eslint for linting 1`] = `
"{
  \\"extends\\": [
    \\"../../../.eslintrc.json\\"
  ],
  \\"ignorePatterns\\": [
    \\"!**/*\\",
    \\".mesh\\"
  ],
  \\"overrides\\": [
    {
      \\"files\\": [
        \\"*.ts\\",
        \\"*.tsx\\",
        \\"*.js\\",
        \\"*.jsx\\"
      ],
      \\"rules\\": {}
    },
    {
      \\"files\\": [
        \\"*.ts\\",
        \\"*.tsx\\"
      ],
      \\"rules\\": {}
    },
    {
      \\"files\\": [
        \\"*.js\\",
        \\"*.jsx\\"
      ],
      \\"rules\\": {}
    }
  ]
}
"
`;

exports[`generators/base nested within lib directory --meshConfig should create a cjs config when --meshConfig=%s 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'JavaScript Wiki',
    handler: {
      openapi: {
        source: 'https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base nested within lib directory --meshConfig should create a js config when --meshConfig=%s 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'JavaScript Wiki',
    handler: {
      openapi: {
        source: 'https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base nested within lib directory --meshConfig should create a json config when --meshConfig=%s 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"JavaScript Wiki\\",
    \\"handler\\": {
      \\"openapi\\": {
        \\"source\\": \\"https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml\\"
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base nested within lib directory --meshConfig should create a yml config by default 1`] = `
"
sources:
  - name: JavaScript Wiki
    handler:
      openapi:
        source: https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base nested within lib directory --meshConfig should create a yml config when --meshConfig=%s 1`] = `
"
sources:
  - name: JavaScript Wiki
    handler:
      openapi:
        source: https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base nested within lib directory --meshExampleProject should create a javascriptWiki cjs config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'JavaScript Wiki',
    handler: {
      openapi: {
        source: 'https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base nested within lib directory --meshExampleProject should create a javascriptWiki config by default 1`] = `
"
sources:
  - name: JavaScript Wiki
    handler:
      openapi:
        source: https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base nested within lib directory --meshExampleProject should create a javascriptWiki js config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'JavaScript Wiki',
    handler: {
      openapi: {
        source: 'https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base nested within lib directory --meshExampleProject should create a javascriptWiki json config 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"JavaScript Wiki\\",
    \\"handler\\": {
      \\"openapi\\": {
        \\"source\\": \\"https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml\\"
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base nested within lib directory --meshExampleProject should create a javascriptWiki yml config 1`] = `
"
sources:
  - name: JavaScript Wiki
    handler:
      openapi:
        source: https://api.apis.guru/v2/specs/wikimedia.org/1.0.0/swagger.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base nested within lib directory --meshExampleProject should create a stackexchange cjs config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'StackExchange',
    handler: {
      openapi: {
        source: 'https://raw.githubusercontent.com/grokify/api-specs/master/stackexchange/stackexchange-api-v2.2_openapi-v3.0.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base nested within lib directory --meshExampleProject should create a stackexchange js config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'StackExchange',
    handler: {
      openapi: {
        source: 'https://raw.githubusercontent.com/grokify/api-specs/master/stackexchange/stackexchange-api-v2.2_openapi-v3.0.yaml',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base nested within lib directory --meshExampleProject should create a stackexchange json config 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"StackExchange\\",
    \\"handler\\": {
      \\"openapi\\": {
        \\"source\\": \\"https://raw.githubusercontent.com/grokify/api-specs/master/stackexchange/stackexchange-api-v2.2_openapi-v3.0.yaml\\"
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base nested within lib directory --meshExampleProject should create a stackexchange yml config 1`] = `
"
sources:
  - name: StackExchange
    handler:
      openapi:
        source: https://raw.githubusercontent.com/grokify/api-specs/master/stackexchange/stackexchange-api-v2.2_openapi-v3.0.yaml

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base nested within lib directory --meshExampleProject should create a trippin cjs config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'TripPin',
    handler: {
      odata: {
        source: 'https://services.odata.org/TripPinRESTierService/(S({env.NX__TRIPPIN__API_KEY}))/',
        batch: 'multipart',
        expandNavProps: true,
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base nested within lib directory --meshExampleProject should create a trippin js config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'TripPin',
    handler: {
      odata: {
        source: 'https://services.odata.org/TripPinRESTierService/(S({env.NX__TRIPPIN__API_KEY}))/',
        batch: 'multipart',
        expandNavProps: true,
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base nested within lib directory --meshExampleProject should create a trippin json config 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"TripPin\\",
    \\"handler\\": {
      \\"odata\\": {
        \\"source\\": \\"https://services.odata.org/TripPinRESTierService/(S({env.NX__TRIPPIN__API_KEY}))/\\",
        \\"batch\\": \\"multipart\\",
        \\"expandNavProps\\": true
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base nested within lib directory --meshExampleProject should create a trippin yml config 1`] = `
"
sources:
  - name: TripPin
    handler:
      odata:
        source: https://services.odata.org/TripPinRESTierService/(S({env.NX__TRIPPIN__API_KEY}))/
        batch: multipart
        expandNavProps: true

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base nested within lib directory --meshExampleProject should create a weatherbit cjs config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'Weatherbit',
    handler: {
      newOpenapi: {
        baseUrl: 'http://api.weatherbit.io/v2.0/',
        oasFilePath: 'https://www.weatherbit.io/static/swagger.json',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base nested within lib directory --meshExampleProject should create a weatherbit js config 1`] = `
"
module.exports = {
  sources: [
    {
    name: 'Weatherbit',
    handler: {
      newOpenapi: {
        baseUrl: 'http://api.weatherbit.io/v2.0/',
        oasFilePath: 'https://www.weatherbit.io/static/swagger.json',
      },
    },
  }
  ],
  serve: {
    browser: false,
  },
  sdk: {
    generateOperations: {
      selectionSetDepth: 6
    }
  }
};

"
`;

exports[`generators/base nested within lib directory --meshExampleProject should create a weatherbit json config 1`] = `
"
{
  \\"sources\\": [
    {
    \\"name\\": \\"Weatherbit\\",
    \\"handler\\": {
      \\"newOpenapi\\": {
        \\"baseUrl\\": \\"http://api.weatherbit.io/v2.0/\\",
        \\"oasFilePath\\": \\"https://www.weatherbit.io/static/swagger.json\\"
      }
    }
  }
  ],
  \\"serve\\": {
    \\"browser\\": false
  },
  \\"sdk\\":{
    \\"generateOperations\\": {
      \\"selectionSetDepth\\": 6
    }
  }
}
"
`;

exports[`generators/base nested within lib directory --meshExampleProject should create a weatherbit yml config 1`] = `
"
sources:
  - name: Weatherbit
    handler:
      newOpenapi:
        baseUrl: http://api.weatherbit.io/v2.0/
        oasFilePath: https://www.weatherbit.io/static/swagger.json

serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 6
"
`;

exports[`generators/base nested within lib directory --unitTestRunner should add a jest config if the unitTestRunner is jest 1`] = `
"/* eslint-disable */
export default {
  displayName: 'test-my-mesh-lib',
  preset: '../../../jest.preset.js',
  globals: {
    'ts-jest': {
      tsconfig: '<rootDir>/tsconfig.spec.json',
    }
  },
  testEnvironment: 'node',
  transform: {
    '^.+\\\\\\\\.[tj]sx?$': 'ts-jest'
  },
  moduleFileExtensions: ['ts', 'tsx', 'js', 'jsx'],
  coverageDirectory: '../../../coverage/libs/test/my-mesh-lib'
};
"
`;
